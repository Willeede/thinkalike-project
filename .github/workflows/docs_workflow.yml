name: Documentation Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up the Python environment
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install system dependencies required for building packages like pandas
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            python3-dev \
            python3-venv \
            build-essential \
            meson \
            ninja-build \
            gfortran \
            libopenblas-dev \
            liblapack-dev

      # Print versions of key tools for debugging purposes
      - name: Debug Versions
        run: |
          python --version
          meson --version
          ninja --version
          gfortran --version

      # Upgrade pip, setuptools, and wheel before installing Python packages
      - name: Upgrade Build Tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel

      # Install Python dependencies listed in requirements.txt
      - name: Install dependencies
        env:
          PYTHONUNBUFFERED: 1
        run: |
          pip install -r requirements.txt

      # Build documentation using Sphinx
      - name: Parse Code Comments with Sphinx
        run: |
          cd docs/sphinx
          make html

      # Transform generated HTML documentation to Markdown
      - name: Transform Markdown
        env:
          PYTHONUNBUFFERED: 1
        run: |
          python transform_docs.py --input docs/_build/html --output docs/markdown

      # Translate documentation into other languages
      - name: Translate Documentation
        env:
          PYTHONUNBUFFERED: 1
        run: |
          python translate_docs.py --source docs/markdown --target docs/translations

      # Structure the documentation site using MkDocs
      - name: Structure Documentation with MkDocs
        env:
          PYTHONUNBUFFERED: 1
        run: |
          mkdocs build --site-dir docs/site

      # Validate the documentation using Great Expectations
      - name: Validate Documentation with Great Expectations
        env:
          PYTHONUNBUFFERED: 1
        run: |
          great_expectations checkpoint run documentation_validation_checkpoint

      # Save the validation report as an artifact if available
      - name: Save Validation Report
        if: always()
        run: |
          if [ -d "great_expectations/uncommitted/data_docs/" ] && [ "$(ls -A great_expectations/uncommitted/data_docs/)" ]; then
            echo "Directory exists and is not empty; uploading artifact."
            mkdir -p artifacts
            cp -r great_expectations/uncommitted/data_docs/ artifacts/
          else
            echo "Directory does not exist or is empty; skipping artifact upload."
          fi

      # Upload the validation report using the updated release version to avoid deprecation issues
      - name: Upload Validation Report
        if: always()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: validation-report
          path: artifacts

      # Deploy the built documentation to GitHub Pages
      - name: Deploy Documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/site